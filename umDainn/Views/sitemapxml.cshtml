@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<Besitemapxml>
@using Umbraco.Cms.Web.Common.PublishedModels
@using System.Globalization
@using Umbraco.Cms.Core.Services
@using Microsoft.Extensions.Configuration
@inject IPublicAccessService _publicAccessService
@inject IConfiguration _configuration
@{
    Layout = null;
    Context.Response.ContentType = "text/xml";
    const string DATE_TIME_FORMAT = "yyyy-MM-dd";
    CultureInfo culture = new CultureInfo("en-US");

    bool isMultisiteSetup = _configuration.GetValue<bool>("IsMultisiteSetup");

    var rootNodes = isMultisiteSetup
        ? Umbraco.AssignedContentItem.Root().Children.Where(x => IsValidDocumentType(x))
        : Umbraco.ContentAtRoot().Where(x => IsValidDocumentType(x));
}
<?xml version="1.0" encoding="UTF-8" ?>
<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
    @foreach (var node in rootNodes)
    {
        await Traverse(node, DATE_TIME_FORMAT, culture);
    }
</urlset>

@functions {
    private async Task Traverse(IPublishedContent node, string DATE_TIME_FORMAT, CultureInfo culture)
    {
        <url>
            <loc>@node.Url(mode: UrlMode.Absolute)</loc>
            <lastmod>@node.UpdateDate.ToString(DATE_TIME_FORMAT)</lastmod>
        </url>
        
        foreach (var item in node.Children.Where(x => IsValidDocumentType(x)))
        {
            await Traverse(item, DATE_TIME_FORMAT, culture);
        }

        if (node.IsDocumentType(BeblogPage.ModelTypeAlias))
        {
            ListBlogPosts(node, DATE_TIME_FORMAT, culture);
        }
    }

    private bool IsValidDocumentType(IPublishedContent content)
    {
        return !content.IsDocumentType(Besitemapxml.ModelTypeAlias) &&
               !content.IsDocumentType(Berobotstxt.ModelTypeAlias) &&
               !content.IsDocumentType(NotFoundError.ModelTypeAlias) &&
               !content.IsDocumentType(BeblogPostsFolder.ModelTypeAlias) &&
               !content.IsDocumentType(DesignFolder.ModelTypeAlias) &&
               !content.IsDocumentType(Settings.ModelTypeAlias) &&
               !content.IsDocumentType(FormsData.ModelTypeAlias) &&
               !_publicAccessService.IsProtected(content.Path);
    }

    private void ListBlogPosts(IPublishedContent blogLandingPage, string DATE_TIME_FORMAT, CultureInfo culture)
    {
        var blogPages = blogLandingPage.Children.First(x => x.IsDocumentType(BeblogPostsFolder.ModelTypeAlias)).Children
            .OrderByDescending(y => y.Value<DateTime>("postDate"));

        if (blogPages.Any())
        {
            foreach (var item in blogPages)
            {
                <url>
                    <loc>@item.Url(mode: UrlMode.Absolute)</loc>
                    <lastmod>@item.UpdateDate.ToString(DATE_TIME_FORMAT)</lastmod>
                </url>
            }
        }
    }
}