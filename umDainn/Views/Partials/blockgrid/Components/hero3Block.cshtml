@using Umbraco.Cms.Core.Models
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<Umbraco.Cms.Core.Models.Blocks.BlockGridItem<Hero3Block>>
@{
    var design = ViewData["Design"] as Design;
    var backgroundColor = string.Empty;
    if (!string.IsNullOrEmpty(Model.Content.BackgroundColor)
    && (design?.BaselineColors?.Background.TryGetValue(Model.Content.BackgroundColor, out var value) ?? false))
    {
        backgroundColor = value;
    }
    var image = Model.Content.Image;
    var hasBrightContrast = Model.Content.Contrast == "ffffff";
}
<div class="section-hero-3 py-md-9" style="background-color:#@backgroundColor" @(hasBrightContrast ? "bright-contrast" : null)>
    <div class="container">
        <div class="row align-items-md-center flex-column-reverse flex-md-row">
            <div class="col-md-6">
                <div class="hero-content">
                    <p class="lead-sm fw-medium mb-0 mb-md-2">@Model.Content.Subtitle</p>
                    <h1 class="h2 mb-2">
                        @Model.Content.Headline
                    </h1>
                    @* Only render if there is some content... *@
                    @if (Model.Areas.Any(a => a.Any()))
                    {
                        @await Html.GetBlockGridItemAreasHtmlAsync(Model)
                    }
                </div>
            </div>
            <div class="col-md-6">
                @if (image is not null)
                {
                    <div class="hero-background mb-5 mb-md-0" style="background-image: url(@image.GetCropUrl(imageCropMode: ImageCropMode.Min, width: 960))">
                    </div>
                }
            </div>
        </div>
    </div>
</div>
