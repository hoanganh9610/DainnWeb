@using Umbraco.Cms.Core.Models
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<Umbraco.Cms.Core.Models.Blocks.BlockGridItem<ServiceBlock>>
@{
    var design = ViewData["Design"] as Design;
    var backgroundColor = string.Empty;
    if (!string.IsNullOrEmpty(Model.Content.BackgroundColor)
    && (design?.BaselineColors?.Background.TryGetValue(Model.Content.BackgroundColor, out var value) ?? false))
    {
        backgroundColor = value;
    }
    var noBackgroundColor = string.IsNullOrEmpty(backgroundColor);
    var hasBrightContrast = Model.Content.Contrast == "ffffff";
    var image = Model.Content.Image;
    var altText = image?.Value<string>("altText");
    if (string.IsNullOrWhiteSpace(altText))
    {
        altText = image?.Name;
    }
}
<style>
    .square {
        position: relative;
        padding-top: 100%;
    }

    .service-image {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-size: cover;
        background-position: center;
    }

    .service-title {
        text-transform: uppercase;
    }

    .card-service img {
        height: 100%;
    }

    @@media(max-width:575px) {
        .card-service img {
            height: 270px !important;
        }
    }

    .card-service[bright-contrast] {
        color: white;
    }

    .card-service[bright-contrast] .h4 {
        color: white;
    }
</style>
<div class="card-service card overflow-x-hidden overflow-y-hidden h-100" data-bs-theme="light" style="background-color: #@backgroundColor" @(noBackgroundColor ? "nobackgroundcolor" : null) @(hasBrightContrast ? "bright-contrast" : "")>
    <div class="row gx-0 h-100">
        <div class="col-md-5">
            <img class="image w-100 object-fit-cover" src="@image?.GetCropUrl(imageCropMode: ImageCropMode.Min, width: Model.ColumnSpan > 6 ? 550 : 300)" alt="@altText" />
        </div>
        <div class="col-md-7 d-flex flex-column justify-content-between@(Model.ColumnSpan == 12 ? " p-4" : (Model.ColumnSpan < 6 ? " p-2" : " p-3"))">
            <div>
                <p class="mb-2">@Model.Content.Description</p>
                <h3 class="h4">@Model.Content.Headline</h3>
            </div>
            <div class="mt-auto">
                @if (!string.IsNullOrWhiteSpace(Model?.Content?.Link?.Name))
                {
                    <a class="btn @(Model.Content.ButtonVariant == "Secondary" ? "btn-outline-primary" : "btn-primary")" href="@Model.Content.Link.Url" target="@Model.Content.Link.Target">@Model.Content.Link.Name</a>
                }
            </div>
        </div>
    </div>
</div>
